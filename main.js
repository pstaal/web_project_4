!function(){"use strict";var e={d:function(t,s){for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{hi:function(){return E}});class t{constructor(e,t){this._settings=e,this._form=t}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_showInputError(e,t,s){const r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._settings.inputErrorClass),r.textContent=s,r.classList.add(this._settings.errorClass)}_hideInputError(e,t){const s=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),s.classList.remove(this._settings.errorClass),s.textContent=""}_toggleButtonState(e,t){this._hasInvalidInput(e)?(t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}_disableButton(e){e.classList.add(this._settings.inactiveButtonClass),e.disabled=!0}_toggleInputError(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}_setEventListeners(e){e.addEventListener("submit",(e=>{e.preventDefault()}));const t=[...e.querySelectorAll(this._settings.inputSelector)],s=e.querySelector(this._settings.submitButtonSelector);e.addEventListener("reset",(()=>{this._disableButton(s)})),t.forEach((r=>{r.addEventListener("input",(()=>{this._toggleInputError(e,r),this._toggleButtonState(t,s)}))}))}resetValidation(e){const t=Array.from(e.querySelectorAll(".popup__input")),s=document.querySelector(this._form);t.forEach((e=>{this._hideInputError(s,e)}))}enableValidation(){const e=document.querySelector(this._form);this._setEventListeners(e)}}class s{constructor(e){this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_opened")}close(){this._popup.classList.remove("popup_opened")}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>{this.close()})),document.addEventListener("keydown",(e=>{this._handleEscClose(e)})),document.addEventListener("click",(e=>{e.target.classList.contains("popup")&&document.querySelector(".popup_opened")&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._inputList=this._popup.querySelectorAll(".popup__input"),this._form=this._popup.querySelector(".popup__form")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class n{constructor(e,t,s,r){this._text=e.text,this._imageLink=e.imageLink,this._likes=e.likes,this._cardSelector=t,this._handleCardClick=s,this._popupConfirmation=r,this._ownerId=e.owner,this.id=e._id,this._userId=e.currentId}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__card").cloneNode(!0)}_toggleHeart(){let e=this._element.querySelector(".places__card-button").classList.contains("places__card-button-liked");this._heartIcon.classList.toggle("places__card-button-liked"),E.toggleLike(this.id,e).then((e=>{this._element.querySelector(".places__likes-counter").innerHTML=e.likes.length})).catch((e=>{console.log(e)}))}removeCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".places__card-button").addEventListener("click",(()=>{this._toggleHeart()})),this._element.querySelector(".places__card-delete-icon")&&this._element.querySelector(".places__card-delete-icon").addEventListener("click",(()=>{this._popupConfirmation.open(this)})),this._element.querySelector(".places__card-image").addEventListener("click",(e=>{this._handleCardClick({link:this._imageLink,text:this._text})}))}generateCard(){return this._element=this._getTemplate(),this._heartIcon=this._element.querySelector(".places__card-button"),this._likes.some((e=>e._id===this._userId))&&this._heartIcon.classList.add("places__card-button-liked"),this._ownerId!==this._userId&&this._element.querySelector(".places__card-delete-icon").remove(),this._setEventListeners(),this._element.querySelector(".places__card-image").src=this._imageLink,this._element.querySelector(".places__card-image").alt=this._text,this._element.querySelector(".places__card-title").textContent=this._text,this._element.querySelector(".places__likes-counter").textContent=this._likes.length,this._element}}class o{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const i=document.querySelector(".profile__button-name-change"),a=document.querySelector(".profile__button-add-place"),c=document.querySelector("[name='userName']"),l=document.querySelector("[name='userJob']"),u=document.querySelector(".popup-profile"),p=document.querySelector(".popup-place"),_=document.querySelector(".popup-profile-picture"),d=document.querySelector(".popup__form-profile"),h=document.querySelector(".popup__form-place"),m=document.querySelector(".popup__form-profile-picture"),f=document.querySelector(".profile__picture"),g=document.querySelector(".profile__picture-container"),b=document.querySelector(".popup__button-profile"),S=document.querySelector(".popup__button-place"),v=document.querySelector(".popup__button-picture");let y,C;const E=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._section=null}_handleResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}initialize(){return Promise.all([this.getInitialUser(),this.getInitialCards()])}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>this._handleResponse(e)))}getInitialUser(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>this._handleResponse(e)))}addCart(e){let{title:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}toggleLike(e,t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._handleResponse(e)))}changePicture(e){let{avatar:t}=e;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>this._handleResponse(e)))}setNewUser(e){let{userName:t,userJob:s}=e;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"5ad7ef92-ff2d-4fbe-9e41-f5034926c435","Content-Type":"application/json"}}),L=new class extends s{constructor(e,t){super(e),this._handleClick=t,this._button=this._popup.querySelector(".popup__button")}open(e){super.open(),this._card=e}setEventListeners(){super.setEventListeners(),this._button.addEventListener("click",(()=>{this._handleClick(this._card)}))}}(".popup-confirm",(function(e){E.deleteCard(e.id).then((e=>{console.log(e),L.close()})).catch((e=>{console.log(e)})),e.removeCard()}));L.setEventListeners();const q=new class extends s{constructor(e){super(e),this._popupImage=document.querySelector(".popup-picture__image"),this._popupImageTitle=document.querySelector(".popup-picture__title")}open(e,t){this._popupImage.setAttribute("src",e),this._popupImage.setAttribute("alt",t),this._popupImageTitle.textContent=t,super.open()}}(".popup-picture");q.setEventListeners();const k=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileFunction=document.querySelector(s)}getUserInfo(){return{userName:this._profileName.textContent,userJob:this._profileFunction.textContent}}setUserInfo(e){let{userName:t,userJob:s}=e;this._profileName.textContent=t,this._profileFunction.textContent=s}}({userNameSelector:".profile__name",userJobSelector:".profile__function"});function I(e,t,s,r){return new n(e,t,s,r).generateCard()}function x(e){let{link:t,text:s}=e;q.open(t,s)}E.initialize().then((e=>{const[t,s]=e;y=new o({items:s,renderer:e=>{console.log(e),C=t._id;const s=I({text:e.name,imageLink:e.link,likes:e.likes,owner:e.owner._id,_id:e._id,currentId:C},"#card-template",x,L);y.addItem(s)}},".places"),y.renderItems(),k.setUserInfo({userName:t.name,userJob:t.about}),f.src=t.avatar})).catch((e=>{console.log(e)}));const w=new r(".popup-place",(function(e){S.textContent="Saving...",E.addCart(e).then((e=>{S.textContent="Create";const t=I({text:e.name,imageLink:e.link,likes:e.likes,owner:C,_id:e._id,currentId:C},"#card-template",x,L);y.addItem(t),w.close()})).catch((e=>{console.log(e)})),h.reset()}));w.setEventListeners();const U=new r(".popup-profile",(function(e){b.textContent="Saving...",E.setNewUser(e).then((e=>{b.textContent="Save",k.setUserInfo({userName:e.name,userJob:e.about}),U.close()})).catch((e=>{console.log(e)})),d.reset()}));U.setEventListeners();const N=new r(".popup-profile-picture",(function(e){v.textContent="Saving...",E.changePicture(e).then((e=>{v.textContent="Save",f.src=e.avatar,N.close()})).catch((e=>{console.log(e)})),m.reset()}));N.setEventListeners();const B=new t({inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},".popup__form-profile");B.enableValidation();const V=new t({inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},".popup__form-place");V.enableValidation();const J=new t({inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},".popup__form-profile-picture");J.enableValidation(),a.addEventListener("click",(function(){V.resetValidation(p),w.open()})),i.addEventListener("click",(function(){B.resetValidation(u);const{userName:e,userJob:t}=k.getUserInfo();c.value=e,l.value=t,U.open()})),g.addEventListener("click",(function(){J.resetValidation(_),N.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,