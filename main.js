!function(){"use strict";class e{constructor(e,t){this._settings=e,this._form=document.querySelector(t),this._buttonElement=document.querySelector(t).querySelector(this._settings.submitButtonSelector),this._inputList=[...document.querySelector(t).querySelectorAll(this._settings.inputSelector)]}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_showInputError(e,t,s){const r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._settings.inputErrorClass),r.textContent=s,r.classList.add(this._settings.errorClass)}_hideInputError(e,t){const s=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),s.classList.remove(this._settings.errorClass),s.textContent=""}_toggleButtonState(e,t){this._hasInvalidInput(e)?this._disableButton(t):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}_disableButton(e){e.classList.add(this._settings.inactiveButtonClass),e.disabled=!0}_toggleInputError(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}_setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._form.addEventListener("reset",(()=>{this._disableButton(this._buttonElement),this.resetValidation()})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(this._form,e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(this._form,e)}))}enableValidation(){this._setEventListeners(this._form)}}class t{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target.classList.contains("popup")&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._handleFormSubmit=t,this._inputList=this._popup.querySelectorAll(".popup__input"),this._form=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button"),this._submitButtonText=this._submitButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}close(){super.close(),this._form.reset()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class r{constructor(e,t,s,r,n){this._text=e.text,this._imageLink=e.imageLink,this._likes=e.likes,this._cardSelector=t,this._handleCardClick=s,this._popupConfirmation=r,this._ownerId=e.owner,this.id=e._id,this._userId=e.currentId,this._toggleLike=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__card").cloneNode(!0)}removeCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".places__card-button").addEventListener("click",(()=>{this._toggleLike()})),this._element.querySelector(".places__card-delete-icon")&&this._element.querySelector(".places__card-delete-icon").addEventListener("click",(()=>{this._popupConfirmation.open(this)})),this._element.querySelector(".places__card-image").addEventListener("click",(e=>{this._handleCardClick({link:this._imageLink,text:this._text})}))}generateCard(){return this._element=this._getTemplate(),this._heartIcon=this._element.querySelector(".places__card-button"),this._likes.some((e=>e._id===this._userId))&&this._heartIcon.classList.add("places__card-button-liked"),this._ownerId!==this._userId&&this._element.querySelector(".places__card-delete-icon").remove(),this._setEventListeners(),this._element.querySelector(".places__card-image").src=this._imageLink,this._element.querySelector(".places__card-image").alt=this._text,this._element.querySelector(".places__card-title").textContent=this._text,this._element.querySelector(".places__likes-counter").textContent=this._likes.length,this._element}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const i=document.querySelector(".profile__button-name-change"),o=document.querySelector(".profile__button-add-place"),a=document.querySelector("[name='userName']"),c=document.querySelector("[name='userJob']"),l=(document.querySelector(".popup-profile"),document.querySelector(".popup-place")),u=document.querySelector(".popup-profile-picture"),p=(document.querySelector(".popup__form-profile"),document.querySelector(".popup__form-place"),document.querySelector(".popup__form-profile-picture"),document.querySelector(".profile__picture"),document.querySelector(".profile__picture-container")),_=(document.querySelector(".popup__button-profile"),document.querySelector(".popup__button-place"),document.querySelector(".popup__button-picture"),{inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});let h,d;const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._section=null}_handleResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}initialize(){return Promise.all([this.getInitialUser(),this.getInitialCards()])}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((e=>this._handleResponse(e)))}getInitialUser(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((e=>this._handleResponse(e)))}addCart(e){let{title:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}toggleLike(e,t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._handleResponse(e)))}changePicture(e){let{avatar:t}=e;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>this._handleResponse(e)))}setNewUser(e){let{userName:t,userJob:s}=e;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"5ad7ef92-ff2d-4fbe-9e41-f5034926c435","Content-Type":"application/json"}}),f=new class extends t{constructor(e,t){super(e),this._handleClick=t,this._button=this._popup.querySelector(".popup__button")}open(e){super.open(),this._card=e}setEventListeners(){super.setEventListeners(),this._button.addEventListener("click",(()=>{this._handleClick(this._card)}))}}(".popup-confirm",(function(e){m.deleteCard(e.id).then((t=>{f.close(),e.removeCard()})).catch((e=>{console.log(e)}))}));function g(){let e=this._element.querySelector(".places__card-button").classList.contains("places__card-button-liked");this._heartIcon.classList.toggle("places__card-button-liked"),m.toggleLike(this.id,e).then((e=>{this._element.querySelector(".places__likes-counter").innerHTML=e.likes.length})).catch((e=>{console.log(e)}))}f.setEventListeners();const b=new class extends t{constructor(e){super(e),this._popupImage=document.querySelector(".popup-picture__image"),this._popupImageTitle=document.querySelector(".popup-picture__title")}open(e,t){this._popupImage.setAttribute("src",e),this._popupImage.setAttribute("alt",t),this._popupImageTitle.textContent=t,super.open()}}(".popup-picture");b.setEventListeners();const v=new class{constructor(e){let{userNameSelector:t,userJobSelector:s,userAvatar:r}=e;this._profileName=document.querySelector(t),this._profileFunction=document.querySelector(s),this._picture=document.querySelector(".profile__picture")}getUserInfo(){return{userName:this._profileName.textContent,userJob:this._profileFunction.textContent}}setUserInfo(e){let{userName:t,userJob:s,userAvatar:r}=e;this._profileName.textContent=t,this._profileFunction.textContent=s,this._picture.src=r}}({userNameSelector:".profile__name",userJobSelector:".profile__function"});function L(e,t,s,n,i){return new r(e,t,s,n,i).generateCard()}function S(e){let{link:t,text:s}=e;b.open(t,s)}m.initialize().then((e=>{const[t,s]=e;h=new n({items:s,renderer:e=>{d=t._id;const s=L({text:e.name,imageLink:e.link,likes:e.likes,owner:e.owner._id,_id:e._id,currentId:d},"#card-template",S,f,g);h.addItem(s)}},".places"),h.renderItems(),v.setUserInfo({userName:t.name,userJob:t.about,userAvatar:t.avatar})})).catch((e=>{console.log(e)}));const y=new s(".popup-place",(function(e){y.renderLoading(!0),m.addCart(e).then((e=>{const t=L({text:e.name,imageLink:e.link,likes:e.likes,owner:d,_id:e._id,currentId:d},"#card-template",S,f,g);h.addItem(t),y.close()})).catch((e=>{console.log(e)})).finally((()=>{y.renderLoading(!1)}))}));y.setEventListeners();const E=new s(".popup-profile",(function(e){E.renderLoading(!0),m.setNewUser(e).then((e=>{v.setUserInfo({userName:e.name,userJob:e.about,userAvatar:e.avatar}),E.close()})).catch((e=>{console.log(e)})).finally((()=>{E.renderLoading(!1)}))}));E.setEventListeners();const k=new s(".popup-profile-picture",(function(e){k.renderLoading(!0),m.changePicture(e).then((e=>{v.setUserInfo({userName:e.name,userJob:e.about,userAvatar:e.avatar}),k.close()})).catch((e=>{console.log(e)})).finally((()=>{k.renderLoading(!1)}))}));k.setEventListeners();const q=new e(_,".popup__form-profile");q.enableValidation();const C=new e(_,".popup__form-place");C.enableValidation();const I=new e(_,".popup__form-profile-picture");I.enableValidation(),o.addEventListener("click",(function(){C.resetValidation(l),y.open()})),i.addEventListener("click",(function(){q.resetValidation();const{userName:e,userJob:t}=v.getUserInfo();a.value=e,c.value=t,E.open()})),p.addEventListener("click",(function(){I.resetValidation(u),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,