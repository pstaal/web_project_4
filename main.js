!function(){"use strict";class e{constructor(e,t){this._settings=e,this._form=t}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_showInputError(e,t,s){const r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._settings.inputErrorClass),r.textContent=s,r.classList.add(this._settings.errorClass)}_hideInputError(e,t){const s=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),s.classList.remove(this._settings.errorClass),s.textContent=""}_toggleButtonState(e,t){this._hasInvalidInput(e)?(t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}_disableButton(e){e.classList.add(this._settings.inactiveButtonClass),e.disabled=!0}_toggleInputError(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}_setEventListeners(e){e.addEventListener("submit",(e=>{e.preventDefault()}));const t=[...e.querySelectorAll(this._settings.inputSelector)],s=e.querySelector(this._settings.submitButtonSelector);e.addEventListener("reset",(()=>{this._disableButton(s)})),t.forEach((r=>{r.addEventListener("input",(()=>{this._toggleInputError(e,r),this._toggleButtonState(t,s)}))}))}resetValidation(e){const t=Array.from(e.querySelectorAll(".popup__input")),s=document.querySelector(this._form);t.forEach((e=>{this._hideInputError(s,e)}))}enableValidation(){const e=document.querySelector(this._form);this._setEventListeners(e)}}class t{constructor(e,t,s){this._text=e.text,this._imageLink=e.imageLink,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__card").cloneNode(!0)}_toggleHeart(){this._heartIcon.classList.toggle("places__card-button-liked")}_removeCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".places__card-button").addEventListener("click",(e=>{this._toggleHeart(e)})),this._element.querySelector(".places__card-delete-icon").addEventListener("click",(e=>{this._removeCard(e)})),this._element.querySelector(".places__card-image").addEventListener("click",(e=>{this._handleCardClick({link:this._imageLink,text:this._text})}))}generateCard(){return this._element=this._getTemplate(),this._heartIcon=this._element.querySelector(".places__card-button"),this._setEventListeners(),this._element.querySelector(".places__card-image").src=this._imageLink,this._element.querySelector(".places__card-image").alt=this._text,this._element.querySelector(".places__card-title").textContent=this._text,this._element}}class s{constructor(e){this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_opened")}close(){this._popup.classList.remove("popup_opened")}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",(()=>{this.close()})),document.addEventListener("keydown",(e=>{this._handleEscClose(e)})),document.addEventListener("click",(e=>{e.target.classList.contains("popup")&&document.querySelector(".popup_opened")&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._inputList=this._popup.querySelectorAll(".popup__input"),this._form=this._popup.querySelector(".popup__form")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const n=document.querySelector(".profile__button-name-change"),o=document.querySelector(".profile__button-add-place"),i=document.querySelector("[name='userName']"),a=document.querySelector("[name='userJob']"),l=document.querySelector(".popup-profile"),c=document.querySelector(".popup-place"),p=document.querySelector(".popup__form-profile"),u=document.querySelector(".popup__form-place"),_=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._profileName=document.querySelector(t),this._profileFunction=document.querySelector(s)}getUserInfo(){return{userName:this._profileName.textContent,userJob:this._profileFunction.textContent}}setUserInfo(e){let{userName:t,userJob:s}=e;this._profileName.textContent=t,this._profileFunction.textContent=s}}({userNameSelector:".profile__name",userJobSelector:".profile__function"});_.setUserInfo({userName:"Jacques Cousteau",userJob:"Explorer"});const d=new class extends s{constructor(e){super(e),this._popupImage=document.querySelector(".popup-picture__image"),this._popupImageTitle=document.querySelector(".popup-picture__title")}open(e,t){this._popupImage.setAttribute("src",e),this._popupImage.setAttribute("alt",t),this._popupImageTitle.textContent=t,super.open()}}(".popup-picture");function m(e){let{link:t,text:s}=e;d.open(t,s)}function h(e,s,r){return new t(e,s,r).generateCard()}d.setEventListeners();const g=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=h({text:e.name,imageLink:e.link},"#card-template",m);g.addItem(t)}},".places");g.renderItems();const S=new r(".popup-place",(function(e){const t=h({text:e.title,imageLink:e.link},"#card-template",m);g.addItem(t),u.reset()}));S.setEventListeners();const v=new r(".popup-profile",(function(e){_.setUserInfo(e),p.reset()}));v.setEventListeners();const y=new e({inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},".popup__form-profile");y.enableValidation();const f=new e({inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},".popup__form-place");f.enableValidation(),o.addEventListener("click",(function(){f.resetValidation(c),S.open()})),n.addEventListener("click",(function(){y.resetValidation(l);const{userName:e,userJob:t}=_.getUserInfo();i.value=e,a.value=t,v.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,